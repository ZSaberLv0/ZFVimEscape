*ZFVimEscape.txt* vim script to escape special chars

Author: ZSaberLv0 <http://zsaber.com/>
        modified and enhanced from tpope's vim-unimpaired:
          https://github.com/tpope/vim-unimpaired


how to use                                      *ZFVimEscape*

1. install by [vim-plug](https://github.com/junegunn/vim-plug) or any other plugin manager:

    Plug 'ZSaberLv0/ZFVimCmdMenu' " only required if you want the util method ZF_VimEscape()
    Plug 'ZSaberLv0/ZFVimEscape'

1. have your own key mapping in your vimrc (accorrding the functions below)
2. select something that you want to encode or decode
3. press the mapped key to encode or decode the selected text


functions                                       *ZFVimEscape_functions*


util method                                     *ZF_VimEscape*

xnoremap your_keymap <esc>:call ZF_VimEscape()<cr>
nnoremap your_keymap :call ZF_VimEscape()<cr>

    popup a menu to choose encode/decode function


escape xml/html                                 *ZFVimEscape_xml*

xmap your_keymap <Plug>ZFVimEscape_xml_encode
xmap your_keymap <Plug>ZFVimEscape_xml_decode

    <abc>    <=>    &lt;abc&gt;


escape json                                     *ZFVimEscape_json*

xmap your_keymap <Plug>ZFVimEscape_json_encode
xmap your_keymap <Plug>ZFVimEscape_json_decode

    a"  b\c  <=>    a\"\tb\\c


escape ANSI encoded Unicode                     *ZFVimEscape_unicode*

xmap your_keymap <Plug>ZFVimEscape_unicode_encode
xmap your_keymap <Plug>ZFVimEscape_unicode_decode

    a的b    <=>    \u0061\u8476\u0062


escape binary encoded UTF-8                     *ZFVimEscape_utf8*

xmap your_keymap <Plug>ZFVimEscape_utf8_encode
xmap your_keymap <Plug>ZFVimEscape_utf8_decode

    a的b    <=>    61E79A8462

escape URL                                      *ZFVimEscape_url*

xmap your_keymap <Plug>ZFVimEscape_url_encode
xmap your_keymap <Plug>ZFVimEscape_url_decode

    http://a的b    <=>    http%3A%2F%2Fa%E7%9A%84b


escape C string                                 *ZFVimEscape_cstring*

xmap your_keymap <Plug>ZFVimEscape_cstring_encode
xmap your_keymap <Plug>ZFVimEscape_cstring_decode

    \a  b    <=>    \\a\tb


base64                                          *ZFVimEscape_base64*

xmap your_keymap <Plug>ZFVimEscape_base64_encode
xmap your_keymap <Plug>ZFVimEscape_base64_decode

    abcd    <=>    YWJjZA==


you may change the default base64 table by:

    let g:ZFVimEscape_base64_table="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

or change the base64 pad by:

    let g:ZFVimEscape_base64_pad="="


timestamp                                       *ZFVimEscape_timestamp*

xmap your_keymap <Plug>ZFVimEscape_timestamp_encode
xmap your_keymap <Plug>ZFVimEscape_timestamp_decode

    1544607765    <=>    2018-12-12 17:42:45
    5C10D815      <=>    2018-12-12 17:42:45
    0x5C10D815    <=>    2018-12-12 17:42:45


md5                                             *ZFVimEscape_md5*

xmap your_keymap <Plug>ZFVimEscape_md5_encode

    abcd    <=>    E2FC714C4727EE9395F324CD2E7F331F

you may change the result to lower case by:

    let g:ZFVimEscape_md5_lowercase=1

qrcode                                          *ZFVimEscape_qrcode*

xmap your_keymap <Plug>ZFVimEscape_qrcode_encode

you may change the output token by

    let g:ZFVimEscape_qrcode_bg='██'
    let g:ZFVimEscape_qrcode_fg='  '

